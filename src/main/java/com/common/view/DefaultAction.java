package com.common.view;import javax.servlet.ServletContext;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import javax.servlet.http.HttpSession;import org.apache.commons.lang.StringUtils;import org.apache.struts2.ServletActionContext;import org.apache.struts2.interceptor.ServletRequestAware;import org.apache.struts2.interceptor.ServletResponseAware;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import com.opensymphony.xwork2.ActionSupport;/**** *  * @description 封装action基类 com.qoocc.live.DefaultAction.java *  */public class DefaultAction extends ActionSupport implements ServletRequestAware,		ServletResponseAware {	protected String id;	// 分页使用	protected int pageSize = 10;	protected int currentPageNo = 1;	protected HttpServletRequest request;	protected HttpServletResponse response;	protected Logger logger = LoggerFactory.getLogger(this.getClass());	// 页面序列	public int index;	public String getId() {		return id;	}	public void setId(String id) {		this.id = id;	}	public int getIndex() {		return index;	}	public void setIndex(int index) {		this.index = index;	}	public String execute() throws Exception {		logger.info("default");		return null;	}	// public void getCss() {	// HttpSession session = getHttpSession();	// if (session.getAttribute("cssPath") == null) {	// SkinUtil.getNowDataBaseSkin(session);	// } else {	// SkinUtil.getNowSessionSkin(session);	// }	// }	public HttpServletRequest getRequest() {		return this.request;	}	public HttpServletResponse getResponse() {		response.setContentType("text/html;charset=utf-8");		return response;	}	public HttpSession getHttpSession() {		return this.request.getSession();	}	public ServletContext getApplication() {		return ServletActionContext.getServletContext();	}	/**	 * 	 * @description 获取客户的真实ip,为了防止伪造协议头，不包含代理IP	 * @return 客户的ip地址 zjl 2014年1月17日下午7:54:25	 */	public String getRemoteIp() {		String remoteIp = null;		remoteIp = getRequest().getHeader("X-Real-Ip");		if (StringUtils.isBlank(remoteIp)) {			remoteIp = getRequest().getRemoteAddr();		}		return remoteIp;	}    		/**	 * 	 * @description 获取客户的真实ip,即使使用代理也可获取	 * @return 客户的ip地址 zjl 2014年1月17日下午7:54:25	 */	public String getRealRemoteIp() {		String remoteIp = request.getHeader("X-Forwarded-For");		if (StringUtils.isBlank(remoteIp) || "unknown".equalsIgnoreCase(remoteIp)) {			remoteIp = request.getHeader("X-Real-Ip");			if (StringUtils.isBlank(remoteIp)) {				remoteIp = request.getRemoteAddr();			}		} else {				String[] ipList = remoteIp.split(",");				if (ipList != null && ipList.length > 0) {					String realIp = "";					for (int index = 0; index < ipList.length; index++) {						realIp = (String) ipList[index];						if (!("unknown".equalsIgnoreCase(realIp))) {							remoteIp = realIp;							break;						}					}				}		}		if (StringUtils.isBlank(remoteIp)) {			remoteIp = request.getHeader("X-Real-Ip");		}		return remoteIp;	}					public int getPageSize() {		return pageSize;	}	public void setPageSize(int pageSize) {		this.pageSize = pageSize;	}	public int getCurrentPageNo() {		return currentPageNo;	}	public void setCurrentPageNo(int currentPageNo) {		this.currentPageNo = currentPageNo;	}	@Override	public void setServletRequest(HttpServletRequest request) {		this.request = request;	}	@Override	public void setServletResponse(HttpServletResponse response) {		this.response = response;	}}